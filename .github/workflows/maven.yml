# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI caab-saml-mock

on:
  push:
    branches:
      - main

jobs:
  define-image-tag:
    runs-on: ubuntu-latest
    # map a step output to job output
    outputs:
      tag_name: ${{ steps.extract_tag_name.outputs.tag_name }}
    steps:
      - name: Extract short repo name
        shell: bash
        run: echo "repo_name=${GITHUB_REPOSITORY#*\/laa-ccms-}" >> $GITHUB_OUTPUT
        id: extract_repo_name
      - name: derive tag name
        shell: bash
        run: echo "tag_name=${{ steps.extract_repo_name.outputs.repo_name }}-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        id: extract_tag_name


  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Set up environment variables
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      run: echo "CAAB_SERVICE_TOKEN=${REPO_TOKEN}" >> $GITHUB_ENV
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: upload jarfile
      uses: actions/upload-artifact@v3
      with:
        name: saml-jar
        path: mujina-idp/target/laa-ccms-caab-saml-mock-1.0.0.jar

  ecr:
    needs: [build, define-image-tag]
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write # for requesting jwt
      contents: read  # for actions/checkout
    steps:
      # Checkout github repo
      - name: checkout repo
        uses: actions/checkout@v3
      - name: download jar
        uses: actions/download-artifact@v3
        with:
          name: saml-jar
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEV_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.DEV_ECR_REGION }}
      # Login to container repo
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      # Build and push docker image to container repo
      - name: docker build and push
        run: |
          docker build -t $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.DEV_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ needs.define-image-tag.outputs.tag_name }}
      - name: delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: saml-jar

  update-helm-chart:
    needs: [ecr, define-image-tag]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout charts repo
        uses: actions/checkout@v3
        with:
          repository: ministryofjustice/laa-ccms-caab-helm-charts
          ref: development
          path: laa-ccms-caab-helm-charts
          token: ${{ secrets.REPO_TOKEN }}
      - name: update helm chart
        env:
            IMAGE_TAG: ${{ needs.define-image-tag.outputs.tag_name }}
        run: |
          echo "$IMAGE_TAG"
          cd laa-ccms-caab-helm-charts/laa-ccms-caab-service/charts/laa-ccms-caab-saml-mock/
          yq eval-all "( .appVersion = \"${{ env.IMAGE_TAG }}\" )" -i Chart.yaml
          git config --global user.email "github@justice.gov.uk"
          git config --global user.name "GitHub Actions Bot"
          git add .
          git commit -m "update appVersion to ${{ env.IMAGE_TAG }}"
          git push origin

     

      
