# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI Github

on:
  push:
    branches-ignore:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: upload jarfile
      uses: actions/upload-artifact@v3
      with:
        name: saml-jar
        path: mujina-idp/target/laa-ccms-caab-saml-mock-1.0.0.jar

  ecr:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write # for requesting jwt
      contents: read  # for actions/checkout
    steps:
      # Checkout github repo
      - uses: actions/checkout@v3
      # Assume role in cloud platform
      - name: download jar
        uses: actions/download-artifact@v3
        with:
          name: saml-jar
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}
      # Login to container repo
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      # Build and push docker image to container repo
      - run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
      - name: delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: saml-jar

#  deploy-dev:
#    runs-on: ubuntu-latest
#    environment: development
#    needs: ecr
#    env:
#      KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE_DEV }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Update image tag
#        env:
#          ECR_URL: ${{ secrets.ECR_URL_DEV }}
#        run: export IMAGE_TAG=${{ github.sha }} && cat kubectl_deploy/deploy.tpl | envsubst > kubectl_deploy/deployment.yaml
#      - name: Authenticate to the cluster
#        env:
#          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_DEV }}
#        run: |
#          echo "${{ secrets.KUBE_CERT_DEV }}" > ca.crt
#          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
#          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_DEV }}
#          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_DEV}}
#          kubectl config use-context ${KUBE_CLUSTER}
#      - name: Apply the updated manifest
#        run: kubectl -n ${KUBE_NAMESPACE} apply -f kubectl_deploy --namespace=laa-ccms-civil

  update-helm-chart:
    needs: ecr
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout charts repo
        uses: actions/checkout@v3
        with:
          repository: ministryofjustice/laa-ccms-caab-helm-charts
          ref: task/create-helm-charts
          path: laa-ccms-caab-helm-charts
          token: ${{ secrets.REPO_TOKEN }}
      - name: temporarily list directories
        run: ls -lR
      - name: Update Helm Chart Values
        uses: Nextdoor/helm-set-image-tag-action@main
        with:
          values_files: laa-ccms-caab-helm-charts/laa-ccms-caab-service/charts/laa-ccms-caab-saml-mock/Chart.yaml
          tag_keys: .version
          tag_value: 0.0.1
          verbose: true
          dry: true
